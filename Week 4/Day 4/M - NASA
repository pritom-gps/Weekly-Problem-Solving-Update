#include <bits/stdc++.h>
using namespace std;
vector<int> all_palindrome;
void palindrome()
{
    for (int i = 0; i < (1 << 15); i++)
    {
        string s = to_string(i);
        int length = s.length();
        bool flag = true;
        for (int j = 0; j < length / 2; j++)
        {
            if (s[j] != s[length - j - 1])
            {
                flag = false;
                break;
            }
        }
        if (flag)
            all_palindrome.push_back(i);
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    palindrome();

    int tst;
    cin >> tst;
    while (tst--)
    {
        int n;
        cin >> n;
        vector<int> v(n);
        unordered_map<int, int> mp;
        for (int i = 0; i < n; i++)
        {
            cin >> v[i];
            mp[v[i]]++;
        }
        long long ans = n;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < all_palindrome.size(); j++)
            {
                int val = (v[i] ^ all_palindrome[j]);
                    ans += mp[val];
            }
        }
        cout << ans / 2 << '\n';
    }
    // for (int val : all_palindrome)
    //     cout << val << endl;
    return 0;
}
